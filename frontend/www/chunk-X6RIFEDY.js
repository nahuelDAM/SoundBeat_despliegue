import{b as s,c as i}from"./chunk-5NEJBAS5.js";import{c,d,f as o,g as h,r as g}from"./chunk-YSYQHBOM.js";var f=(()=>{let n=class n{constructor(){this._idUsuario=new d(this.getInitialIdFromStorage()),this.idUsuario$=this._idUsuario.asObservable(),this._rolUsuario=new d(this.getInitialRolFromStorage()),this.rolUsario$=this._rolUsuario.asObservable(),this._authDataCleared=new c,this.authDataCleared$=this._authDataCleared.asObservable()}getInitialIdFromStorage(){return localStorage.getItem("idUsuario")}getInitialRolFromStorage(){return localStorage.getItem("rolUsuario")}login(t,e){let r={email:t,password:e};return o(s.post({url:`${i.URLbase}/api/auth/login`,headers:{"Content-Type":"application/json"},data:r}).then(a=>a.data))}register(t){return o(s.post({url:`${i.URLbase}/api/auth/register`,headers:{"Content-Type":"application/json"},data:t}).then(e=>e.data))}guardarToken(t){localStorage.setItem("token",t)}guardarIdUsuario(t){localStorage.setItem("idUsuario",t),this._idUsuario.next(t)}guardarRolUsuario(t){localStorage.setItem("rolUsuario",t),this._rolUsuario.next(t)}cambiarPassword(t){let e=`${i.URLbase}/api/auth/cambiar-password`,r=s.post({url:e,headers:this._getAuthHeaders(),data:t}).then(a=>{if(a.status>=200&&a.status<300)return a.data;throw{status:a.status,error:a.data}});return o(r)}cambiarEmail(t){let e=`${i.URLbase}/api/auth/cambiar-email`,r=s.post({url:e,headers:this._getAuthHeaders(),data:t}).then(a=>{if(a.status>=200&&a.status<300)return a.data;throw{status:a.status,error:a.data}});return o(r)}forgotPassword(t){let e=`${i.URLbase}/api/auth/forgot-password`;return o(s.post({url:e,headers:{"Content-Type":"application/json"},data:{email:t}}).then(r=>r.data))}resetPassword(t,e){let r=`${i.URLbase}/api/auth/reset-password?token=${t}`,a=s.post({url:r,headers:{"Content-Type":"application/json"},data:{password:e}}).then(l=>{if(l.status>=200&&l.status<300)return l.data;throw{status:l.status,error:l.data}});return o(a)}_getAuthHeaders(){let t=localStorage.getItem("token"),e={"Content-Type":"application/json"};return t&&(e.Authorization=`Bearer ${t}`),e}getToken(){return localStorage.getItem("token")}clearAuthData(){localStorage.removeItem("token"),localStorage.removeItem("idUsuario"),localStorage.removeItem("rolUsuario"),this._idUsuario.next(null),this._rolUsuario.next(null),this._authDataCleared.next(),console.log("LoginService: Datos de autenticaci\xF3n limpiados.")}validateToken(){let t=this.getToken();if(!t)return console.log("LoginService: No hay token en localStorage para validar."),h(!1);let e=`${i.URLbase}/api/auth/validate-token`,r={Authorization:`Bearer ${t}`};return o(s.get({url:e,headers:r}).then(a=>a.status===200?(console.log("LoginService: Token validado con el backend. Es v\xE1lido."),!0):(console.warn(`LoginService: Token no v\xE1lido seg\xFAn backend. Status: ${a.status}`),this.clearAuthData(),!1)).catch(a=>(console.error("LoginService: Error al validar token (red/servidor):",a),this.clearAuthData(),!1)))}};n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=g({token:n,factory:n.\u0275fac,providedIn:"root"});let u=n;return u})();export{f as a};
